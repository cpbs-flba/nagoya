<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>nagoya</artifactId>
		<groupId>com.nagoya</groupId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<description>The middleware is a lighweight application server (based on Jetty) which implements a basic business logic and provides REST services.</description>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>com.nagoya.middleware</artifactId>
	<name>${project.artifactId}</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.glassfish.jersey.version>2.27</org.glassfish.jersey.version>
		<org.eclipse.jetty.version>9.4.41.v20210516</org.eclipse.jetty.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.nagoya</groupId>
			<artifactId>com.nagoya.dao</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.nagoya</groupId>
			<artifactId>com.nagoya.dao.test</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<!-- Blockchain API -->
		<dependency>
			<groupId>com.nagoya</groupId>
			<artifactId>com.nagoya.blockchain.api</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		<!-- Blockchain API implementation -->
		<!-- Theoretically this API could be extended with another implementation 
			for another blockchain -->
		<dependency>
			<groupId>com.nagoya</groupId>
			<artifactId>com.nagoya.blockchain.impl</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<!-- START: REST DEPENDENCIES -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1</version>
		</dependency>
		<!-- STOP: REST DEPENDENCIES -->

		<!-- Jersey dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>

		<!-- Needed because of note: -->
		<!-- "Jersey now defines it's own injection facade" -->
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${org.glassfish.jersey.version}</version>
		</dependency>
		<!-- END: dependencies for the REST services -->

		<!-- JSON web token -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- java mail -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- Jetty dependencies -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${org.eclipse.jetty.version}</version>
		</dependency>

	</dependencies>

	<build>
<!-- 		<resources> -->
<!-- 			<resource> -->
<!-- 				<directory>src/test/resources</directory> -->
<!-- 			</resource> -->
<!-- 		</resources> -->

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${version.org.apache.maven.plugins}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<!-- version already defined in parent pom -->
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.nagoya.middleware.main.Main</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>serverconfig/</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${version.org.apache.maven.plugins}</version>
				<executions>
					<execution>
						<id>copy-resources-1</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deliverable/serverconfig</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-2</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deliverable/lib</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/lib</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-3</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deliverable</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<include>index.html</include>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-resources-4</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/deliverable</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<include>${project.artifactId}-${project.version}.${project.packaging}</include>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>
	</build>

</project>